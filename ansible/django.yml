- hosts: localhost
  vars:
    #ansible_user: "ec2-user"
    #ansible_ssh_private_key_file: "~/.ssh/id_rsa"
    env: test
    app: back
    project: apptest
    domain: apptest.es
    path: tmp
    urlgit: https://github.com/icasadosar/
    branch: main 
  become: yes
  tasks:
  - name: install package repo epel form amazon linux 2
    shell: "amazon-linux-extras install epel -y"

  - name: yum update
    yum:
      name: '*'
      state: latest
      update_cache: yes
      update_only: yes
    register: yum_update_status

  - name: install compiler
    yum:
      name:
        - gcc-c++
        - make
      state: present
     
  - name: install python
    yum:
      name: 
        - python
        - python-pip
      state: present

  - name: create log directory
    file:
      path: /var/log/nginx/{{ domain }}/{{ app }}
      state: directory
      mode: '0775'

  - name: create error-log file
    file:
      path: /var/log/nginx/{{ domain }}/{{ app }}/error-{{ app }}.{{ domain }}-http-80.log
      state: touch
      mode: u=rw,g=r,o=r

  - name: create access-log file
    file:
      path: /var/log/nginx/{{ domain }}/{{ app }}/access-{{ app }}.{{ domain }}-http-80.log
      state: touch
      mode: u=rw,g=r,o=r       

#  - name: install nodejs
#    yum:
#      name: ['nodejs']
#      skip_broken: yes
#      state: present

#  - name: install npm
#    yum:
#      name: ['npm']
#      skip_broken: yes
#      state: present

  - name: git-clone repo
    git:
      repo: "{{ urlgit }}/{{ app }}"
      dest: "/{{ path }}/{{ project }}/{{ app }}"
      #single_branch: yes
      version: "{{ branch }}"
      
  - name: install python requeriments
    pip:
      requeriments: "/{{ path }}/{{ project }}/{{ app }}/requeriments.txt"
      state: present
    #notify: restart nodejs

  - name: copy nginx site-{{ app }}
    template:
        src: site-{{ app }}-{{ domain }}-http-80.conf
        dest: /etc/nginx/conf.d/{{ app }}.{{ domain }}-http-80.conf
        owner: root
        group: root
        mode: '0644'
    notify: restart nginx

  - name: copy startup script to /opt directory
    template:
        src: doStartupDjango.sh
        dest: /opt/doStartupDjango.sh
        mode: 0755

  - name: Run startup script
    shell: ./opt/doStartupDjango.sh &
    args:
      chdir: /{{ path }}/{{ project }}/{{ app }}
    async: 45
    poll: 0 

  handlers:
    - name: restart nginx
      service:
        name: nginx
        state: restarted